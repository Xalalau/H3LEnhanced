# Use a VM with VS 2017
os: Visual Studio 2017

# Only target Windows 32 bits
platform: Win32

# Branches que serÃ£o compiladas pelo TravisCI.
branches:
  only:
  - ultimate

# Build in Release configuration only
configuration:
  - Release
  
cache:
  # Cache dependencies so we don't rebuild them all the time. The cache should only need to be invalidated if we change versions, which is done in this file as well
  - dependencies/xercesc/install/cmake -> appveyor.yml
  - dependencies/xercesc/install/include -> appveyor.yml
  - dependencies/xercesc/install/lib -> appveyor.yml

# Build with all those possible configurations
environment:
  COMPILER_VERSION: Visual Studio 15 2017
  COMPILER_TOOLSET: v141
  matrix:
    - BUILD_RULES: -DUSE_OPFOR=1 -DUSE_ANGELSCRIPT=0 -DUSE_AS_SQL=0

before_build:
  # Use the latest version of CMake
  - ps: Write-Host "=== (1/5) Downloading CMake 3.11.4 ZIP for Windows 64 bits ===" -foregroundcolor green
  - ps: wget https://cmake.org/files/v3.11/cmake-3.11.4-win64-x64.zip -OutFile cmake_files.zip
  - ps: Write-Host "=== (2/5) Installing CMake ===" -foregroundcolor green
  - cmd: 7z x cmake_files.zip -o"." -y
  # Rename this so we don't have the version number used everywhere
  - ps: Rename-Item cmake-3.11.4-win64-x64 cmake_install
  # Handle dependencies
  - ps: .\appveyor_install_dependencies.ps1
  # Create the build directory and a fake Steam common directory
  - ps: Write-Host "=== (4/5) Creating build and fake Steam common directory ===" -foregroundcolor green
  - md build_h3lenhanced
  - md fake_steamcommon

build_script:
  # Build H3LEnhanced
  - cd build_h3lenhanced
  - ps: Write-Host "=== (5/5) Building H3LEnhanced ===" -foregroundcolor green
  - ..\cmake_install\bin\cmake.exe -DXercesC_DIR=%APPVEYOR_BUILD_FOLDER%\dependencies\xercesc\install\cmake -DSTEAMCOMMON=..\fake_steamcommon %BUILD_RULES% -G"%COMPILER_VERSION%" -T%COMPILER_TOOLSET% ..
  - ..\cmake_install\bin\cmake.exe --build . --clean-first --config %CONFIGURATION%

# If one job fail, mark the build as failed
matrix:
  fast_finish: true

# We don't have unit tests
test: off

# We don't do deploying yet
deploy: off
