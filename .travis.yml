#   ########   #
#   Hu3-Life   # O mod da família brasileira.
#   ########   #

#----------------#
#     Geral      #
#----------------#

# Branches que serão compiladas pelo TravisCI.
branches:
  only:
  - master

# Não encher o saco com emails
notifications:
  email: false

#----------------#
#    Ambiente    #
#----------------#

# Usar C como base
language: c

# Linux - usando Ubuntu 14.04 Trusty Tahr como base (suporte de sistemas mais antigos até os mais novos - glibc // única opção disponível no Travis)
sudo: required
dist: trusty

# Linux - adicionar o Ubuntu restricted tool chain para instalar o GCC e a biblioteca padrão C
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - linux-libc-dev
    - gcc-7-multilib
    - g++-7-multilib
    - libcurl4-openssl-dev:i386
    - libpthread-stubs0-dev:i386

# Variáveis de ambiente
env:
  global:
    - COMPILER_VERSION_C=gcc-7
    - COMPILER_VERSION_CXX=g++-7
    - DEPENDENCIES_DIR="${TRAVIS_BUILD_DIR}/dependencies"
    - secure: NIiprhJhoWrzcIi2EveFBbXHqa3Z3LY1DezsqVF7uEb82lAY93gl0teaC4prDVa/xxgsvxn6SswNsyf7QGEFQnuzPrG48JPmhsCBf3qTGdHWBEiCdRZT/crUgAFQfmd0+gpzJJ0xysO+1LsTcDW0JwKNoAcmaqmoT5fXQctdn9eN6gMPT7puGCQz7d54D/DMj00PdCdl20oaN7iyGcQh6d+YK5XNWAvzTPSt2YW1yL01YXRrZ75hkFnNvi8qwTOCuSA3uldyowFYSCu81JesQGxohTqSgdIUt5IX6cZfw/yb1Ff22VlHI2nfJnuWRjAQnTXXJv6aOoiLFcT3hA0UDONxRSalCRJGmnnx9uqoLRD3DtB28WPdKv1V+VNBcgDdvfKMCfUAhLBu2r+pqT78ro76KD1wL9y4GT9qZtrGWAoHBjmOcZQSFVUxUppDxKrDFXyBFHP2X05+hM5yS6hhEwR6S9S3+u68ARCQOPRYDNQKAL425DIa4ukYZrI8PaAbBjaSCbvfKDtaJrTOR7Flh+UXozvhXOO5fznCLo++Y17N1ROgxRmsLjujVmGJXgdDaBUNXDZxaDCa34JX1/7pRZxC6nqTeA2WSTEAGp8clQG1zN2fUUh2CiSeIRLySet6Qhh74hsm/tLMFEdRRgrGsVytAEOrRf25Ms/KUZOwhes=
    - secure: V9Rx+uW8lzTWjFaN9Jpz1K/mnjp4n0lvTJU4CAd6Fy56gddG5VFFz03megTPTS0Xnq+tUXr4VJSwlFdGS5HgKDWTPaxMbgE7NrxXaUESkj1OB5I4SCw80/1e18ec3zxfbulMfQWjDhcKGfljY11vXXQ9oSZM9R7pY1XJpFjoUDxVhC6Qlup7QlYINnLYqGsHGdKMmnVY7tFT8ppgkBk9BaW78W2pa2v8DfLdNWheMxxxDbZVJE1MQouDDJN9JWg6A+iLOfF6Wqa6oAfUCQKMD+rxsrlGEC4Uvm645OuH5JJXw/EYzJKXEzmhCEqoLt7WKGEV13fg+3DhLDL+lpvkNUNzQWlhqahLH1uUqQEdTOPHUesIlsbCciO2CiVv43ZK+xUADFzGGKes4r9M1Uw+MI1u7152HLIUWXXe8m8PwiWlDwmQteJuSVDfZ1FJRphakIA+RgHS1W/BuK9TCuNA+8On+hep40DRA74T5cVN3srKJWmVHwe8jtSm//1ogrzqN3WlMEZyliz+g6YqhnlVPbInBoBxghb751xFIPJaSCb8mpcl91wwH7AHUmetCKG4Kzzo0K2PFVnJac19FM46+6yjSTbosAUyN79JMU+1fkVmVqnXvIjYVwtc/pw6F2du3jDFxdCX9XEkN2z7xHSsjjDeyEsls29oSoJPjnZtu8g=

# Evitar recompilar o Xerces-c
# Nota original: Disable the cache for now; this isn't working quite as expected (and it's in beta)
#cache:
#  directories:
#      - ${DEPENDENCIES_DIR}/xercesc/install/include
#      - ${DEPENDENCIES_DIR}/xercesc/install/lib
    
matrix:
  allow_failures:
    # Como nós não temos máquinas com Mac para testar as builds dele, tanto faz se falhar
    - os: osx
  include:
    # Opções de build type disponíveis:
    # Debug, Release, MinSizeRel e RelWithDebInfo
    # A fazer: Gerar .pdb em modo Release
    #
    # Ubuntu 14.04 Trusty Tahr amd64 (Linux) GCC 7
    - os: linux
      env: BUILD_RULES="-DCMAKE_BUILD_TYPE=Release -DUSE_OPFOR=1 -DUSE_ANGELSCRIPT=0 -DUSE_AS_SQL=0"
    # macOS Sierra 10.12.6 (Xcode 8.3.3)
    - os: osx
      env: BUILD_RULES="-DCMAKE_BUILD_TYPE=Release -DUSE_OPFOR=1 -DUSE_ANGELSCRIPT=0 -DUSE_AS_SQL=0"

#----------------#
#     Build      #
#----------------#

before_install:
  # No Linux, baixar a versão 32 bits da biblioteca padrão do C
  # No Mac, apenas atualizar o Homebrew
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      sudo dpkg --add-architecture i386
      sudo apt-get -qq update
      sudo apt-get install -y linux-libc-dev:i386
    else
      brew update
    fi

install:
  # Preparar as dependências, dar build e falsear o diretório common do Steam para o Travis
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - STEAMCOMMON_DIR="${TRAVIS_BUILD_DIR}/fake_steamcommon"
  - mkdir -p ${DEPS_DIR} && mkdir -p ${STEAMCOMMON_DIR} && mkdir -p ${STEAMCOMMON_DIR} && mkdir -p ${STEAMCOMMON_DIR}/Half-Life && cd ${STEAMCOMMON_DIR}/Half-Life
  # Make symlinks to required libraries located in the Half-Life directory
  - ln -s ${TRAVIS_BUILD_DIR}/lib/public/vgui.so libvgui.so
  - ln -s ${TRAVIS_BUILD_DIR}/lib/public/libtier0.so libtier0.so
  - ln -s ${TRAVIS_BUILD_DIR}/lib/public/libvstdlib.so libvstdlib.so
  - cd ${DEPS_DIR}
  # Pegar o último CMake e criar symlinks para que ele possa usar o VGUI corretamente
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="http://www.cmake.org/files/v3.11/cmake-3.11.4-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      CMAKE_URL="http://www.cmake.org/files/v3.11/cmake-3.11.4-Darwin-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/CMake.app/Contents/bin:${PATH}
    fi

  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      COMPILER_SETTINGS="-DCMAKE_CXX_COMPILER=${COMPILER_VERSION_CXX} -DCMAKE_C_COMPILER=${COMPILER_VERSION_C}"
    fi

before_script:
  # Mover o diretório de build
  - cd ${TRAVIS_BUILD_DIR}
    
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      # Usar o arquivo de toolchain para forçar o ambiente de 32 bits
      COMPILER_SETTINGS="${COMPILER_SETTINGS} -DCMAKE_TOOLCHAIN_FILE=${TRAVIS_BUILD_DIR}/cmake/Linux_32bit_toolchain.cmake"
    fi
    
  - bash ${TRAVIS_BUILD_DIR}/travis_install_dependencies.sh ${DEPENDENCIES_DIR} "${COMPILER_SETTINGS}"
  
  - mkdir build && cd build

script:
  # Executar os comandos de cmake e make
  # Usar a biblioteca vgui local
  # Nota original: TODO: SDL should be found by CMake at all times, this needs fixing - Solokiller
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      cmake ${COMPILER_SETTINGS} -DCMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS} -m32 -fno-strict-overflow -w" -DCMAKE_C_FLAGS="${CMAKE_C_FLAGS} -m32 -fno-strict-overflow -w" \
      -DSTEAMCOMMON=${STEAMCOMMON_DIR} ${BUILD_RULES} \
      -Dvgui_DIR="${TRAVIS_BUILD_DIR}/lib/public" \
      -DXercesC_DIR="${DEPENDENCIES_DIR}/xercesc/install/lib/cmake/XercesC" \
      ..
    else
      cmake -DCMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS} -m32 -fno-strict-overflow -w" -DCMAKE_C_FLAGS="${CMAKE_C_FLAGS} -m32 -fno-strict-overflow -w" \
      -DSTEAMCOMMON=${STEAMCOMMON_DIR} ${BUILD_RULES} \
      -Dvgui_DIR="${TRAVIS_BUILD_DIR}/lib/public" \
      -DXercesC_DIR="${DEPENDENCIES_DIR}/xercesc/install/lib/cmake/XercesC" \
      ..
    fi
  - make

#----------------#
#   Deployment   #
#----------------#

# Enviar para o Xalahost os arquivos de biblioteca gerados
after_success:
    - cd ../fake_steamcommon/Half-Life/Hu3-Life/
    - |
      if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
        curl --ftp-create-dirs -T dlls/hl.so -u $FTP_USER:$FTP_PASSWORD ftp://files.000webhost.com/public_html/hu3-life/fake_steamcommon/Half-Life/Hu3-Life/dlls/
        curl --ftp-create-dirs -T cl_dlls/client.so -u $FTP_USER:$FTP_PASSWORD ftp://files.000webhost.com/public_html/hu3-life/fake_steamcommon/Half-Life/Hu3-Life/cl_dlls/
      else
        curl --ftp-create-dirs -T dlls/hl.dylib -u $FTP_USER:$FTP_PASSWORD ftp://files.000webhost.com/public_html/hu3-life/fake_steamcommon/Half-Life/Hu3-Life/dlls/
        curl --ftp-create-dirs -T cl_dlls/client.dylib -u $FTP_USER:$FTP_PASSWORD ftp://files.000webhost.com/public_html/hu3-life/fake_steamcommon/Half-Life/Hu3-Life/cl_dlls/
      fi
